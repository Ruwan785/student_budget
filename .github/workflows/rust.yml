name: MacOS & Linux Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            archive_suffix: linux

          - target: x86_64-apple-darwin
            os: macos-latest
            archive_suffix: macos

    runs-on: ${{ matrix.os }}

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: ü¶Ä Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: ‚öôÔ∏è Add Build Target
        run: rustup target add ${{ matrix.target }}

      - name: üì¶ Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: üè∑ Get Binary Name
        id: binary
        run: echo "name=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].name')" >> $GITHUB_OUTPUT

      - name: üìÅ Package .tar.gz
        run: |
          mkdir -p release
          BIN_NAME=${{ steps.binary.outputs.name }}
          BIN_PATH=target/${{ matrix.target }}/release/$BIN_NAME

          echo "Looking for binary at: $BIN_PATH"
          if [ ! -f "$BIN_PATH" ]; then
            echo "‚ùå Binary not found at $BIN_PATH"
            exit 1
          fi

          cp "$BIN_PATH" release/
          tar -czvf "release/${BIN_NAME}-${{ matrix.archive_suffix }}.tar.gz" -C release "$BIN_NAME"

      - name: üöÄ Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
